

import * as THREE from 'three'
import React from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { JSX } from 'react/jsx-runtime'

type GLTFResult = GLTF & {
  nodes: {
    ['0309e78c-2629-4355-a846-1ae0fa7398ce']: THREE.Mesh
    ['bba32a21-ebb4-473c-84be-2c3413e60b2e']: THREE.Mesh
    ['693666d9-ead6-441b-a7fc-eeed149ccf1e']: THREE.Mesh
  }
  materials: {
    [key: string]: THREE.Material
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const gltf = useGLTF('/MyCollection1.glb')
  const { nodes } = gltf as unknown as GLTFResult
  const commonColor = new THREE.MeshStandardMaterial({
    color: "purple",
    roughness: 0.3,  // More reflective surface
    metalness: 0.1   // Metallic appearance
  })
  return (
    <group {...props} dispose={null} scale={0.002}>
      <PerspectiveCamera
        makeDefault={false}  // Set as active camera
        fov={45}
        position={[-5, 5, 5]}
        near={0.1}
        far={1000}
      />
      <directionalLight
        intensity={10}
        position={[200, 150, 100]}
        rotation={[-0.818, 1.364, 0.667]}
      />
      <mesh
        geometry={nodes['0309e78c-2629-4355-a846-1ae0fa7398ce'].geometry}
        material={commonColor}
        position={[37.231, 45.131, -273.383]}
        rotation={[0, 0.104, 0]}
        scale={2.246}
      />
      <mesh
        geometry={nodes['bba32a21-ebb4-473c-84be-2c3413e60b2e'].geometry}
        material={commonColor}
        position={[37.231, 45.131, -273.383]}
        rotation={[-0.06, 0.104, 0.006]}
        scale={2.246}
      />
      <mesh
        geometry={nodes['693666d9-ead6-441b-a7fc-eeed149ccf1e'].geometry}
        material={commonColor}
        position={[93.487, -109.156, 437.517]}
        rotation={[-3.045, 0.024, -0.138]}
        scale={2.246}
      />
    </group>
  )
}

useGLTF.preload('/MyCollection1.glb')



// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */
// import * as THREE from 'three'
// import React from 'react'
// import { useGLTF, PerspectiveCamera } from '@react-three/drei'
// import { GLTF } from 'three-stdlib'
// type GLTFResult = GLTF & {
//   nodes: {
//     ['0309e78c-2629-4355-a846-1ae0fa7398ce']: THREE.Mesh
//     ['bba32a21-ebb4-473c-84be-2c3413e60b2e']: THREE.Mesh
//     ['693666d9-ead6-441b-a7fc-eeed149ccf1e']: THREE.Mesh
//   }
//   materials: {}
// }
// export function Model(props: JSX.IntrinsicElements['group']) {
//   const { nodes, materials } = useGLTF('/MyCollection1.glb') as GLTFResult
//   return (
//     <group {...props} dispose={null}>
//       <PerspectiveCamera
//         makeDefault={false}
//         far={10000}
//         near={0.005}
//         fov={25.274}
//         position={[-3272.813, 354.03, 3975.498]}
//         rotation={[-0.13, -0.467, -0.059]}
//       />
//       <directionalLight
//         intensity={500}
//         decay={2}
//         position={[200, 150, 0]}
//         rotation={[-0.818, 1.364, 0.667]}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes['0309e78c-2629-4355-a846-1ae0fa7398ce'].geometry}
//         material={nodes['0309e78c-2629-4355-a846-1ae0fa7398ce'].material}
//         position={[37.231, 45.131, -273.383]}
//         rotation={[0, 0.104, 0]}
//         scale={2.246}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes['bba32a21-ebb4-473c-84be-2c3413e60b2e'].geometry}
//         material={nodes['bba32a21-ebb4-473c-84be-2c3413e60b2e'].material}
//         position={[37.231, 45.131, -273.383]}
//         rotation={[-0.06, 0.104, 0.006]}
//         scale={2.246}
//       />
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes['693666d9-ead6-441b-a7fc-eeed149ccf1e'].geometry}
//         material={nodes['693666d9-ead6-441b-a7fc-eeed149ccf1e'].material}
//         position={[93.487, -109.156, 437.517]}
//         rotation={[-3.045, 0.024, -0.138]}
//         scale={2.246}
//       />
//     </group>
//   )
// }
// useGLTF.preload('/MyCollection1.glb')
